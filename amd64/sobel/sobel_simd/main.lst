     1                                 %line 1+1 main.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 [extern printf]
    23                                 
    24                                 [global apply_simd_sobel]
    25                                 
    26                                 
    27                                 [section .data]
    28                                 [align 32]
    29 00000000 000000000000F0BF00-     sobelr0: dq -1.0, -2.0, -1.0, 0.0
    30 00000000 000000000000C00000-
    31 00000000 00000000F0BF000000-
    32 00000000 0000000000         
    33                                 [align 32]
    34 00000020 000000000000000000-     sobelr1: dq 0.0, 0.0, 0.0, 0.0
    35 00000020 000000000000000000-
    36 00000020 000000000000000000-
    37 00000020 0000000000         
    38                                 [align 32]
    39 00000040 000000000000F03F00-     sobelr2: dq 1.0, 2.0, 1.0, 0.0
    40 00000040 000000000000400000-
    41 00000040 00000000F03F000000-
    42 00000040 0000000000         
    43                                 
    44 00000060 5074723A2025700A00      print_pointer: db "Ptr: %p", 0xA, 0x0
    45                                 
    46                                 [section .text]
    47                                 apply_simd_sobel:
    48                                 
    49 00000000 55                      push rbp
    50 00000001 4889E5                  mov rbp, rsp
    51 00000004 4883EC48                sub rsp, 72
    52                                 
    53                                 
    54                                 
    55                                 
    56                                 
    57                                 
    58                                 
    59                                 
    60                                 
    61                                 
    62 00000008 4883FA03                cmp rdx, 3
    63 0000000C 0F8CAA000000            jl clean_and_return
    64 00000012 4883F903                cmp rcx, 3
    65 00000016 0F8CA0000000            jl clean_and_return
    66                                 
    67                                 
    68                                 
    69                                 
    70                                 
    71                                 
    72                                 
    73                                 
    74 0000001C 4883EA02                sub rdx, 2
    75 00000020 4883E902                sub rcx, 2
    76 00000024 48C1E103                shl rcx, 3
    77                                 
    78                                 
    79 00000028 4801CE                  add rsi, rcx
    80 0000002B 4883C618                add rsi, 24
    81                                 
    82 0000002F 4D31C0                  xor r8, r8
    83                                 
    84                                 
    85                                 
    86 00000032 C5FD280425[00000000]      vmovapd ymm0, [sobelr0]
    87 0000003B C5FD280C25[00000000]      vmovapd ymm1, [sobelr1]
    88 00000044 C5FD281425[00000000]      vmovapd ymm2, [sobelr2]
    89                                 
    90                                  outer_loop:
    91                                 
    92 0000004D 4D31C9                  xor r9, r9
    93                                 
    94                                  inner_loop:
    95                                 
    96                                 
    97                                 
    98                                 
    99                                 
   100                                 
   101 00000050 F20F5CF6                subsd xmm6, xmm6
   102                                 
   103                                 
   104 00000054 4989FA                  mov r10, rdi
   105                                 
   106 00000057 C4C17D101A              vmovupd ymm3, [r10]
   107                                 
   108 0000005C 4D8D540A10              lea r10, [r10 + 1*rcx + 16]
   109 00000061 C4C17D1022              vmovupd ymm4, [r10]
   110                                 
   111 00000066 4D8D540A10              lea r10, [r10 + 1*rcx + 16]
   112 0000006B C4C17D102A              vmovupd ymm5, [r10]
   113                                 
   114                                 
   115 00000070 C5E559D8                vmulpd ymm3, ymm0
   116 00000074 C5DD59E1                vmulpd ymm4, ymm1
   117 00000078 C5D559EA                vmulpd ymm5, ymm2
   118                                 
   119 0000007C C5E558DC                vaddpd ymm3, ymm4
   120 00000080 C5E558DD                vaddpd ymm3, ymm5
   121                                 
   122                                 
   123 00000084 C5FD111C24              vmovupd [rsp], ymm3
   124 00000089 660F10642410            movupd xmm4, [rsp+16]
   125 0000008F F20F106C2408            movsd xmm5, [rsp+8]
   126 00000095 660F58DC                addpd xmm3, xmm4
   127 00000099 F20F58DD                addsd xmm3, xmm5
   128                                 
   129                                 
   130 0000009D F20F111E                movsd [rsi], xmm3
   131                                 
   132 000000A1 4883C708                add rdi, 8
   133 000000A5 4883C608                add rsi, 8
   134                                 
   135                                 
   136 000000A9 4983C108                add r9, 8
   137 000000AD 4939C9                  cmp r9, rcx
   138 000000B0 7C9C                    jl inner_loop
   139                                 
   140                                 
   141 000000B2 4883C710                add rdi, 16
   142 000000B6 4883C610                add rsi, 16
   143                                 
   144                                 
   145 000000BA 49FFC0                  inc r8
   146 000000BD 4C39C2                  cmp rdx, r8
   147 000000C0 7589                    jne outer_loop
   148                                 
   149                                  clean_and_return:
   150                                 
   151 000000C2 4883C448                add rsp, 72
   152 000000C6 5D                      pop rbp
   153 000000C7 C3                      ret
   154                                 
   155                                 
   156                                  invalid_image_size:
   157                                 
   158                                 
   159                                 
   160 000000C8 EBF6                    jmp clean_and_return
   161                                 
   162                                  print_pointer_subroutine:
   163 000000CA 55                      push rbp
   164 000000CB 4889E5                  mov rbp, rsp
   165 000000CE 4883EC50                sub rsp, 80
   166                                 
   167 000000D2 48897C2408              mov [rsp+8], rdi
   168 000000D7 4889742410              mov [rsp+16], rsi
   169 000000DC 4889542418              mov [rsp+24], rdx
   170 000000E1 48894C2420              mov [rsp+32], rcx
   171 000000E6 4C89442428              mov [rsp+40], r8
   172 000000EB 4C894C2430              mov [rsp+48], r9
   173 000000F0 4C89542438              mov [rsp+56], r10
   174 000000F5 4C895C2440              mov [rsp+64], r11
   175                                 
   176 000000FA 48C7C7[00000000]        mov rdi, print_pointer
   177 00000101 488B742408              mov rsi, [rsp+8]
   178 00000106 E8(F6FFFFFF)            call printf
   179                                 
   180 0000010B 488B7C2408              mov rdi, [rsp+8]
   181 00000110 488B742410              mov rsi, [rsp+16]
   182 00000115 488B542418              mov rdx, [rsp+24]
   183 0000011A 488B4C2420              mov rcx, [rsp+32]
   184 0000011F 4C8B442428              mov r8, [rsp+40]
   185 00000124 4C8B4C2430              mov r9, [rsp+48]
   186 00000129 4C8B542438              mov r10, [rsp+56]
   187 0000012E 4C8B5C2440              mov r11, [rsp+64]
   188                                 
   189 00000133 4883C450                add rsp, 80
   190 00000137 5D                      pop rbp
   191 00000138 C3                      ret
